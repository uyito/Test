# Definition for singly-linked list.
class ListNode(object):
    def __init__(self, data = None):
        self.data = data
        self.next = None

    # def get_data(self):
    #     return self.data
    #
    # def get_next(self):
    #     return self.next
    #
    # def set_next(self, new_next):
    #     self.next = new_next

class LinkedList:
    def __init__(self):
        self.head = None
        self.tail = None

    def print_list(self):
        current = self.head
        while current:
            print(current.data)
            current = current.next

    def append(self, data):
        new_node = ListNode(data)
        if self.head is None:
            self.head = new_node
            self.tail = self.head
        # self.head = new_node

        # else:
        #     current = self.head
        #     while current.next:
        #         current = current.next
        #     current.next = new_node

        else:
            self.tail.next = new_node
            self.tail = new_node

class Solution(object):
    def add_two_numbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        current_l1 = l1
        current_l2 = l2

        val_l1 = ""
        val_l2 = ""

        while current_l1 is not None:
            val_l1 = str(current_l1.data)+val_l1
            current_l1= current_l1.next

        while current_l2 is not None:
            val_l2 = str(current_l2.data)+val_l2
            current_l2 = current_l2.next

        val_l1 = int(val_l1)
        val_l2 = int(val_l2)

        sum = val_l2 + val_l1
        sum = str(sum)

        sum_list = LinkedList()
        x = len(sum)-1
        # head = sum[x]
        # new_current = head
        # y = x+1
        while x >= 0:
            sum_list.append(sum[x])
            x -= 1
        return sum_list




llist = LinkedList()
llist1 = LinkedList()
arr1 = [1, 4, 7,]
arr2 = [2, 3, 1]

for x in range(0, len(arr1)):
    llist.append(arr1[x])
    # print (arr1[x])
    llist1.append(arr2[x])

two_sum = Solution().add_two_numbers(llist.head,llist1.head)

two_sum.print_list()

print("------------")
llist1.print_list()
print("------------")
llist.print_list()

